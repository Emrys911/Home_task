Задачи на цикл for

1.	Вывести на экран число "10" 20 раз столбиком.
2.	Дано число N. Составить программу выводящую кубы чисел от 1 до N в одну строку. 
3.	Выведите на экран в одну строку числа от 100 до 
-100 включительно.
4.	Необходимо вывести все четные числа на отрезке [a; a * 10]
5.	Найти сумму всех целых чисел от 100 до 500 включительно.
6.	Найти произведение всех целых чисел от 5 до 20 включительно.
7.	Дано натуральное число n. Вывести на экран факториал этого числа.
Задачи на цикл while

8.	Дано число n. Посчитать сумму всех чётных чисел от 0 до n.
9.	Дано натуральное число. Определить произведение цифр в нем которые кратны 2, кроме числа 0.
10.	Дано число n. Вывести на экран числа 1, 4, 9, 16, 25, ... которые меньше n.

Sample Input :
15
Sample Output :
1 4 9
11.	Дано число n. Среди чисел 1, 4, 9, 16, 25, ... найти первое, которые больше n.
Sample Input :
5
Sample Output :
9 
12.	Дано число n. Определить первую цифру этого числа.
13.	Дано число n. Найти сумму цифр в этом числе.
14.	Дано натуральное число n. Найти значение минимальной цифры в данном числе
Задачи на строки и циклы

15.	Дана строка. Преобразовать строку: после каждой буквы 'z' добавить символ '!'.
16.	Вывести строку, удалив из нее повторные вхождения символов.
17.	Удалить в строке все буквы 'b', непосредственно за которыми идет цифра. Удалить из текста символы, являющиеся строчными латинскими буквами.

Дополнительные задачи

18.	Дан текст. Слова в тексте разделены одним или несколькими пробелами. Написать программу определяющую количество слов, заканчивающихся одной и той же буквой ‘k’
19.	С клавиатуры вводится натуральное число n <= 1000. Выведите n строк вида "На лугу n коров", склоняя слово "коров" в соответствии с числом n. Проверяем большие числа!!!
Sample Input:
5
Sample Output:
На лугу 1 корова
На лугу 2 коровы
На лугу 3 коровы
На лугу 4 коровы
На лугу 5 коров

20.	Числа Фибоначчи – известная числовая последовательность, в которой первые два члена равны единице, а каждый последующий получается сложением двух предыдущих. По введенному числу n выведите n чисел Фибоначчи через пробел.
Sample Input:
8
Sample Output:
1 1 2 3 5 8 13 21
21.	Даны натуральные числа n, m. Получить все числа меньше m взаимно простые с n.
22.	Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке. Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот символ и количество его повторений в этой позиции строки. Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную последовательность на стандартный вывод. Кодирование должно учитывать регистр символов. 
Sample Input:
Aaaabbcaa
Sample Output:
a4b2c1a2



                                                      1

for i in range(20):
    print(10)


                                                      2

n = int(input())
for i in range(1, n):
    while i < n:
     mul *= numb
     print(n)


                                                        3



n = int(input())
for i in range(100,(-100),-1):
    while i < n:
     mul *= numb
     print(n)
 
                                                        4

n = int(input())
for a in range(a, (a * 10)):
  while i < a:
    if a % 2 == 0:
      mul *= numb
      print(a)

                                                         5


start = 100
stop = 500
result = sum(range(start,stop))
print(result)


                                                         6

start = 5
stop = 20
result = list(mul = numb)
result = (mul,range(5,20))
print(result)

                                                          7

def factorial_func(n: int):
    result = 1
    for i in range(1,n+1):
        result *=i
        return result
    print(n)


                                                         8 


n = int(input())
i = 0
n = 0
while i < n:
    if i % 2:
        n == 0
        n +=i
        print(n)


                                                          9


n = int(input())
i = 1
n != 0
while i < n:
    if i % 2:    
        n +=i
    for i in range(1,n+1):   
     print(n)

                                                           10,11
a = s.isdigit(1,4,9,16,25)
a<n
a = s.isdigit(1,4,9,16,25)
a>n
n = 15
print((int(int(input())**0.5)+1**2))
n = int(input())
n = 5
b = 1
a = 1
while a < n:
    b = b + 2
    a = a + b
    print(a)

                                                           11,12,13,14
list1 = [1,4,9,16,25]
list1.sort()
print('largest element is:', list1[-1])
print(int(str(x)[0]))
print(sum(map(int,list(input()))))
num = n
min_digit = min(str(num))
print(min_digit)
                                                             

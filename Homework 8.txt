Задачи на исключения

1.	Напишите программу которые будет ловить IndexError, когда вы пытаетесь взять индекс элемента, которого нет в списке.
2.	Напишите программу которые будет ловить TypeError, когда вы пытаетесь скаткатенировать строку и число.
3.	Напишите программу которая вычисляет площадь треугольника по формуле Герона, однако если пользователь введёт длину хоть одной стороны треугольника равную 0, то программа должна бросить исключение ArithmeticError.
4.	Дана строка. Проверьте есть ли в ней цифры, иначе бросьте ValueError.
5.	Дан словарь, который содержит некоторые ключи и значения по этим ключам, пользователь не знает этих ключей. Бросьте ошибку KeyError в том случае когда пользователь пытается просмотреть значение по ключу, которого нет в словаре.

Задачи на словари и множества

6.	Даны два списка чисел. Найдите все числа, которые не содержатся одновременно в этих двух списках.
7.	Во входной строке записана последовательность чисел через пробел. Для каждого числа выведите слово YES (в отдельной строке), если это число ранее встречалось в последовательности или NO, если не встречалось.
8.	В ходе исследований ученые делают некие замеры, результаты которых заносят в базу данных. Однако для анализа результатов нет необходимости держать в базе "лишние", повторяющиеся данные. Напишите программу, которая выводит максимальное количество записей, после удаления которых анализ результатов будет произведен верно. Список элементов вводится через пробел.

Sample Input:
6311 9423 142 142 8654 909 Error 6311 142 909 404 502 828 404 9423
Sample Output:
6
9.	Создайте словарь, связав его с переменной school, и наполните данными, которые бы отражали количество учащихся в разных 9 классах (9а, 9б, 9в, 9м, 9ф и т. п.). Внесите изменения в словарь согласно следующему: 
а) в одном из классов изменилось количество учащихся
б) в школе появился новый класс.
в) в школе был расформирован (удален) другой класс. 
г) Вычислите общее количество учащихся 9 классов в школе.

10.	Вам дан словарь, состоящий из пар слов. Каждое слово является синонимом к парному ему слову. Все слова в словаре различны. Для введённого слова вывести его синоним или написать что его нет.

11.	Стремясь стать программистом, важно не только постоянно учиться, но и понимать язык, на котором говорят Ваши коллеги. Чтобы систематизировать знания, Вы решили написать программу, которая составляет маленький словарь из сленговых выражений. Программа принимает на вход строки до символа точки, состоящие из понятий и их определений, разделенных знаком тире. После заполнения словаря программе передается натуральное число m – количество запросов, а затем m строк, каждая из которых представляет собой одно понятие. Если это понятие есть в словаре, необходимо вывести его определение, в обратном случае – "Не найдено".

Sample Input:
DNS – компьютерная система для получения, хранения и обработки информации о доменных именах
Интрасеть – это замкнутая внутренняя сеть какой-либо организации, работающая по Интернет-протоколу TCP/IP
Фича – недокументированная дополнительная возможность, фишка
Мейнфрейм – большой компьютер, имеющий высокую вычислительную мощность
.
4
Бэкап
Фича
Линуксоид
DNS
Sample Output:
Не найдено
недокументированная дополнительная возможность, фишка
Не найдено
компьютерная система для получения, хранения и обработки информации о доменных именах

Дополнительные задачи

12.	Когда Антон прочитал «Войну и мир», ему стало интересно, сколько слов и в каком количестве используется в этой книге. Помогите Антону написать упрощённую версию такой программы, которая сможет подсчитать слова, разделённые пробелом и вывести получившуюся статистику. Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального слова в этой строке число его повторений (без учёта регистра) в формате "слово количество". Порядок вывода слов может быть произвольным, каждое уникальное слово должно выводиться только один раз.

Sample Input 1:
a aa abC aa ac abc bcd a
Sample Output 1:
ac 1
a 2
abc 2
bcd 1
aa 2

13.	Коля устал запоминать телефонные номера и заказал у Вас программу, которая заменила бы ему телефонную книгу. Коля может послать программе два вида запросов: строку, содержащую имя контакта и его номер, разделенные пробелом, или просто имя контакта. В первом случае программа должна добавить в книгу новый номер, во втором – вывести номер контакта. Ввод происходит до символа точки. Если введенное имя уже содержится в списке контактов, необходимо перезаписать номер.
Sample Input:
Ben 89001234050
Mary
Alice 210-220
Alice
Alice 404-502
Ben
Nick +4(908)273-22-42
Nick
Alice
Robert 51234047129
.
Sample Output:
не найдено
210-220
89001234050
+4(908)273-22-42
404-502

14.	Август и Беатриса играют в игру. Август загадал натуральное число от 1 до n. Беатриса пытается угадать это число, для этого она называет некоторые множества натуральных чисел. Август отвечает Беатрисе YES, если среди названных ей чисел есть задуманное или NO в противном случае. После нескольких заданных вопросов Беатриса запуталась в том, какие вопросы она задавала и какие ответы получила и просит вас помочь ей определить, какие числа мог задумать Август. В первой строке задано n - максимальное число, которое мог загадать Август. Далее каждая строка содержит вопрос Беатрисы (множество чисел, разделенных пробелом) и ответ Августа на этот вопрос. Вы должны вывести через пробел, в порядке возрастания, все числа, которые мог задумать Август.

Sample Input:

20
Enter guess: 1 2 3 4
Enter guess: 5 9 20 11
Enter guess: 12 15 10 17 13
Enter guess: 10 17
Enter guess: 13

Sample Output:

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
NO: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
NO: 6 7 8 10 12 13 14 15 16 17 18 19
YES: 10 12 13 15 17
NO: 12 13 15
YES: 13 is correct. You answered on the 5th try.

1.
def catch_index_error(value):
    try:
        return value
    except: IndexError
    return None
catch_index_error(mylist[5])
returns (an_IndexError)
print('Этого элемента нет в списке')

2.
try:
    a = 1
    b = 'exception'
    print(a + b)
except TypeError:
    print('ошибка в типе данных')

3.
try:
    a = 7/0
except ArithmeticError:
    print('Ошибка! Деление на ноль')
    a = int(input())
    b = int(input())
    c = int(input())
    try:
        if a == 0 or b == 0 or c == 0:
            print('Ошибка! Деление на ноль')
        rase: ArithmeticError
    except:
        print('Ошибка! Деление на ноль')
        print('ArithmeticError')
        p = (a + b + c) / 2.0
        s = (p * (p-a) * (p - b) * (p - c)) ** 0.5
        print('Площадь треугольника равна = {}'.format(s))
        print(s)

4.
s = str = int(input())
try:
    if s == str(input('Введите значение')):
        print('Ошибка! Введена строка')
except ValueError:
    print('Только число')
else:
    print('ValueError')
    print(';'.join(str(1/x) for x in range(int(input(), int(input()) + 1))))

*********************************************

def is_number(string):
    try:
        float(string)
        return True
    except ValueError:
        return False
    print(is_number('15.2'))

5.
ages = {'Jim': 30, 'Pam': 28, 'Kevin': 33}
person = input('Get age for: ')
age = ages.get(person)
if age:
    print(f'{person} is {age} years old.')
else:
    print(f"{person}'s age is unknown.")
# Возраст {person} неизвестен.

6.
a = [1, 2, 3, 4, 5]
b = [1, 3, 5, 6]
intersection = list(set(a) & set(b))
print(a & b)
print(f'Only different in the list1 and list2')

7.
numbers = [int(s) for s in input().split()]
occur_before = set()
for num in numbers:
    if num in numbers:
        print('Yes')
    else:
        print('No')
        occur_before.add(num)

8.
str = input(' 6311 ' ' 9423 ' ' 142 ' ' 142 ' ' 8654 ' ' 909 ' ' Error ' ' 6311 ' ' 142 ' ' 909 ' ' 404 ' ' 502 ' ' 828 ' ' 404 ' ' 9423 ')
def find_max_index(nums):
    max_num = nums[0]
    max_index = []
    for num in elem(num):
        if num > max_num:
            max_num = num
            max_index = [i]
        elif num == max_num:
            return max_index
        return [i for num in elem(nums) if num == max(nums)]
    nums = list(map(int, input().split()))
    max_index = find_max_index(nums)
    print(*max_index)
9.
school = {'9a': 23, '9б': 22, '9в': 21, '9м': 20, '9ф': 19}
school.update({'9a':27}) #измененное количество учеников в 9а классе
print(school)
school.update({"1в":25})  # в школе появился 1в класс
print(school)
del school["9б"] # класс 9б удален
print(school)
print(f'Всего учеников в школе 9-х классов:{sum(school.values())}') # выводим общее число учеников в школе

10.
count = int(input('Введите количество пар слов: '))
text_dict = dict()
for i_count in range(1, count +1):
    text = (input(f'{i_count} пара: ').lower().text_dict[text[0]][split()])
    while True:
        word = input('Введите слово: ')
        if word in text_dict:
            print('Синоним', text_dict[word])
        else:
            print('Такого слова в словаре нет')

11.
from collections import Counter

dict_elem = {'компьютерная система для получения, хранения и обработки информации о доменных именах',
             'это замкнутая внутренняя сеть какой-либо организации, работающая по Интернет-протоколу TCP/IP',
             'недокументированная дополнительная возможность, фишка',
             'большой компьютер, имеющий высокую вычислительную мощность'}
slang_dict = {'DNS': 'компьютерная система для получения, хранения и обработки информации о доменных именах',
              'Интрасеть': 'это замкнутая внутренняя сеть какой-либо организации, работающая по Интернет-протоколу TCP/IP',
              'Фича': 'недокументированная дополнительная возможность, фишка',
              'Мейнфрейм': 'большой компьютер, имеющий высокую вычислительную мощность'}

for i in range(len(dict_elem)):
    key_value = input(f'Введите строку из словаря {i + 1}:').split(':')
    slang_dict[key_value[0].lower()] = key_value[1]

search_size = int(input('Введите размер поиска: '))
search_dict = []

for i in range(search_size):
    search_dict.append(input(f'Введите строку поиска №{i + 1}:').lower())

for elem in search_dict:
    if elem in slang_dict:
        print(elem, '-', slang_dict[elem])
    else:
        print('Не найдено')








